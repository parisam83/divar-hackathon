// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: poi.sql

package db

import (
	"context"
)

const getOrCreatePoi = `-- name: GetOrCreatePoi :one
INSERT INTO poi(name, type, latitude, longitude)
VALUES ($1,$2,$3,$4)
ON CONFLICT (name, type) DO NOTHING
RETURNING id, name, type, latitude, longitude, created_at
`

type GetOrCreatePoiParams struct {
	Name      string      `db:"name" json:"name"`
	Type      PoiType     `db:"type" json:"type"`
	Latitude  interface{} `db:"latitude" json:"latitude"`
	Longitude interface{} `db:"longitude" json:"longitude"`
}

func (q *Queries) GetOrCreatePoi(ctx context.Context, arg GetOrCreatePoiParams) (Poi, error) {
	row := q.db.QueryRow(ctx, getOrCreatePoi,
		arg.Name,
		arg.Type,
		arg.Latitude,
		arg.Longitude,
	)
	var i Poi
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Type,
		&i.Latitude,
		&i.Longitude,
		&i.CreatedAt,
	)
	return i, err
}
