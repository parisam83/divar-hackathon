// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package db

import (
	"context"
)

const addUser = `-- name: AddUser :exec
INSERT INTO users (phone_number)
VALUES ($1)
`

func (q *Queries) AddUser(ctx context.Context, phoneNumber string) error {
	_, err := q.db.Exec(ctx, addUser, phoneNumber)
	return err
}

const getUserIDByPhoneNumber = `-- name: GetUserIDByPhoneNumber :one
SELECT id FROM users
WHERE phone_number = $1 LIMIT 1
`

func (q *Queries) GetUserIDByPhoneNumber(ctx context.Context, phoneNumber string) (int32, error) {
	row := q.db.QueryRow(ctx, getUserIDByPhoneNumber, phoneNumber)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const getUserPhoneNumberByID = `-- name: GetUserPhoneNumberByID :one
SELECT phone_number FROM users
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetUserPhoneNumberByID(ctx context.Context, id int32) (string, error) {
	row := q.db.QueryRow(ctx, getUserPhoneNumberByID, id)
	var phone_number string
	err := row.Scan(&phone_number)
	return phone_number, err
}
